<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:smuxi="clr-namespace:Smuxi.Frontend.Wpf"
	x:Class="Smuxi.Frontend.Wpf.Frontend" StartupUri="Preferences\PreferencesDialog.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<Application.Resources>

        <LinearGradientBrush x:Key="ButtonBorder" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="0"/>
    		<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" Offset="1"/>
    		<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Offset="0.5"/>
    		<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.25"/>
    		<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0.75"/>
    	</LinearGradientBrush>
		<LinearGradientBrush x:Key="WindowBackground" EndPoint="1,1" StartPoint="0,0">
			<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Offset="0"/>
			<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="1"/>
		</LinearGradientBrush>
        
        <LinearGradientBrush x:Key="PushedButtonBorder" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" Offset="0"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="1"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Offset="0.5"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0.25"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.75"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="ButtonBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
            <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="PushedButtonBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}"/>
            <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HighlightedButtonBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}"/>
            <GradientStop Offset="1" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
        </LinearGradientBrush>


		<SolidColorBrush x:Key="DisabledText" Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey}}"/>
		<SolidColorBrush x:Key="DisabledButtonBackground" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
		<SolidColorBrush x:Key="DisabledButtonBorder" Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}"/>
        <SolidColorBrush x:Key="Text" Color="#FF000000"/>
        <LinearGradientBrush x:Key="TextBoxBackground" EndPoint="1,1" StartPoint="0,0">
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="0"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TextBoxBorder" Color="#FF000000"/>
        <LinearGradientBrush x:Key="DisabledTextBoxBackground" EndPoint="1,1" StartPoint="0,0">
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" Offset="0"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HoverItemBackground" EndPoint="1,1" StartPoint="-1,-1">
        	<GradientStop Color="#FFFFFFFF" Offset="0"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SelectedItemText" Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
        <LinearGradientBrush x:Key="SelectedItemBackground" EndPoint="1,1" StartPoint="-1,-1">
        	<GradientStop Color="#FFFFFFFF" Offset="0"/>
        	<GradientStop Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" Offset="1"/>
        </LinearGradientBrush>


        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                    	<ControlTemplate.Resources>
                    		<Storyboard x:Key="Storyboard1"/>
                    	</ControlTemplate.Resources>
                        <Border x:Name="Border"
						        Margin="2"
                                CornerRadius="10"
                                MinWidth="30"
                                MinHeight="30"
                                BorderBrush="{DynamicResource ButtonBorder}"
                                BorderThickness="1" Background="{DynamicResource ButtonBackground}">
                            <ContentPresenter Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                    		<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
								<Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledButtonBackground}"/>
								<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledButtonBorder}"/>
							</Trigger>
                    		<Trigger Property="IsMouseOver" Value="True">
                    			<Setter Property="Background" TargetName="Border" Value="{DynamicResource HighlightedButtonBackground}"/>
                    		</Trigger>
                    		<Trigger Property="IsPressed" Value="True">
                    			<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource PushedButtonBorder}"/>
                    			<Setter Property="Background" TargetName="Border" Value="{DynamicResource PushedButtonBackground}"/>
                    		</Trigger>
                    		<Trigger Property="IsKeyboardFocused" Value="True">
                    			<Setter TargetName="Border"
                    				Property="BorderThickness"
                    				Value="3"/>
                    			<Setter TargetName="Border"
                    				Property="Margin"
                    				Value="0,0,0,2"/>
                    		</Trigger>
                    		<Trigger Property="IsDefaulted" Value="True">
                    			<Setter TargetName="Border"
                    				Property="BorderThickness"
                    				Value="3"/>
                    			<Setter TargetName="Border"
                    				Property="Margin"
                    				Value="0,0,0,0"/>
                    		</Trigger>
                    	</ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border" BorderBrush="{DynamicResource TextBoxBorder}" BorderThickness="1" Background="{DynamicResource TextBoxBackground}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                            	<Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                            	<Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledTextBoxBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>






        <ControlTemplate x:Key="EditableComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
				       Grid.ColumnSpan="2"
                       Focusable="False"
                       AllowsTransparency="true"
                       IsOpen="{TemplateBinding IsDropDownOpen}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       MinWidth="{TemplateBinding ActualWidth}">
                    <Border x:Name="DropDownBorder"
                            BorderBrush="{DynamicResource TextBoxBorder}"
                            BorderThickness="1" OpacityMask="{x:Null}" Background="{DynamicResource TextBoxBackground}">
                        <ScrollViewer Foreground="{DynamicResource Text}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <TextBox x:Name="PART_EditableTextBox" Grid.Column="0" IsReadOnly="{TemplateBinding IsReadOnly}">
					<TextBox.Template>
						<ControlTemplate TargetType="{x:Type TextBox}">
							<Border Background="{DynamicResource TextBoxBackground}" BorderBrush="{DynamicResource TextBoxBorder}" BorderThickness="1,1,1,1" x:Name="border">
								<ScrollViewer Focusable="False" x:Name="PART_ContentHost"/>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledTextBoxBackground}"/>
									<Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</TextBox.Template>
				</TextBox>
                <ToggleButton IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{DynamicResource ButtonBackground}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource ButtonBorder}" CornerRadius="0,10,10,0" x:Name="border">
                                <Path Fill="{DynamicResource Text}" HorizontalAlignment="Right" VerticalAlignment="Center" x:Name="path">
                                    <Path.Data>
                                        <Geometry>M 10 25 L 20 07 L 13 12 V 00 H 07 V 12 L 00 07 Z</Geometry>
                                    </Path.Data>
                                </Path>
                            </Border>
                        	<ControlTemplate.Triggers>
                        		<Trigger Property="IsEnabled" Value="False">
                        			<Setter Property="Fill" TargetName="path" Value="{DynamicResource DisabledText}"/>
                        			<Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledButtonBackground}"/>
                        			<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledButtonBorder}"/>
                        		</Trigger>
                        	</ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="HasItems" Value="False">
        			<Setter Property="MinHeight" TargetName="PART_Popup" Value="95"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
            
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
        	<Style.Triggers>
        		<Trigger Property="IsEditable" Value="True">
        			<Setter Property="Template" Value="{DynamicResource EditableComboBoxTemplate}"/>
        		</Trigger>
        	</Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Popup x:Name="PART_Popup"
                                   Focusable="False"
                                   AllowsTransparency="true"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   MinWidth="{TemplateBinding ActualWidth}">
                                <Border x:Name="DropDownBorder"
                                        BorderBrush="{DynamicResource TextBoxBorder}"
                                        BorderThickness="1" Background="{DynamicResource TextBoxBackground}">
                                    <ScrollViewer Foreground="{DynamicResource Text}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                            <ToggleButton DockPanel.Dock="Right"
                                          Width="Auto"
                                          Focusable="false"
                                          ClickMode="Press" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="Border"
                                                BorderBrush="{DynamicResource ButtonBorder}"
                                                BorderThickness="1,1,1,1"
                                                CornerRadius="10,10,10,10"
                                                MinWidth="30"
                                                MinHeight="30"
                                                Margin="0" Background="{DynamicResource ButtonBackground}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                <Path x:Name="DownArrow"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Fill="{DynamicResource Text}" 
                                                  Grid.Column="1">
                                                    <Path.Data>
                                                        <Geometry>M 10 25 L 20 07 L 13 12 V 00 H 07 V 12 L 00 07 Z</Geometry>
                                                    </Path.Data>
                                                </Path>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="true">
                                            	<Setter Property="Background" TargetName="Border" Value="{DynamicResource PushedButtonBackground}"/>
                                            	<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource PushedButtonBorder}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource DisabledText}"/>
                                                <Setter Property="Fill" TargetName="DownArrow" Value="{DynamicResource DisabledText}"/>
                                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledButtonBackground}"/>
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledButtonBorder}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ContentPresenter/>
                            </ToggleButton>
                            
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TabItem}">
        				<Border x:Name="TabBorder" Padding="5"  Background="Transparent">
        					<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsSelected" Value="True">
        						<Setter Property="Foreground" Value="{DynamicResource SelectedItemText}"/>
        						<Setter Property="Background" TargetName="TabBorder" Value="{DynamicResource SelectedItemBackground}"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsMouseOver" Value="True"/>
        							<Condition Property="Selector.IsSelected" Value="False"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="TabBorder" Value="0.5"/>
        						<Setter Property="Background" TargetName="TabBorder" Value="{DynamicResource HoverItemBackground}"/>
        						<Setter Property="Foreground" Value="{DynamicResource SelectedItemText}"/>
        					</MultiTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
        	<Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
        	<Setter Property="Foreground" Value="{DynamicResource Text}"/>
        </Style>
        <Style x:Key="{x:Type smuxi:PreferencesDialog}"
               TargetType="{x:Type smuxi:PreferencesDialog}" 
               BasedOn="{StaticResource {x:Type Window}}"/>
		<Style x:Key="OptionList" TargetType="{x:Type TabControl}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<DockPanel LastChildFill="True">
							<Border DockPanel.Dock="{TemplateBinding TabStripPlacement}"
					    		    Background="{DynamicResource TextBoxBackground}"
									BorderBrush="{DynamicResource TextBoxBorder}"
									BorderThickness="1"
									Margin="3">
								<StackPanel IsItemsHost="True"/>
							</Border>
							<ContentPresenter  Grid.Column="1" ContentSource="SelectedContent" Margin="3"/>
						</DockPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="TabStripPlacement" Value="Left"/>
		</Style>
    </Application.Resources>
</Application>