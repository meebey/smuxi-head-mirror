<?xml version="1.0" encoding="utf-8"?>
<topic id="383058b8-9426-4547-94e0-a8e920929425" revisionNumber="1">
  <developerTroubleshootingDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <summary>
      <para>Working with Twitterizer in Mono</para>
    </summary>
    
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>While the library is not developed for or tested with Mono, Twitterizer should require only a few modifications in order to work well.</para>
    </introduction>
    <!-- Zero or more sections.  These are collapsible.  If using
         <autoOutline />, add an address attribute to identify it and specify
         a title so that it can be jumped to with a hyperlink. -->
    <section address="certificate">
      <title>Invalid Certificate</title>
      <content>
        <para>Currently a bug exists in Mono which hinders communication with some SSL sites, including the Twitter API. 
        This issue isn't unique to Twitterizer, so this workaround should be valid for other projects.</para>
        <code language="cs">private static bool ValidateCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
        {
	        if (sslPolicyErrors == SslPolicyErrors.None)
    			return true;
			
			// HACK: Mono's certificate chain validator is buggy
			if (sslPolicyErrors == SslPolicyErrors.RemoteCertificateChainErrors && sender is HttpWebRequest) {
				var request = (HttpWebRequest) sender;
				if (request.RequestUri.Host == "api.twitter.com" && certificate.Issuer == "OU=Equifax Secure Certificate Authority, O=Equifax, C=US")
					return true;
			}
			return false;
		}
	}</code>
        <!-- <procedure>Optional procedures.  See How To document for procedure layout example.</procedure> -->
      </content>
    </section>

    <relatedTopics><!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID">Link text</link>
      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      --></relatedTopics></developerTroubleshootingDocument>
</topic>