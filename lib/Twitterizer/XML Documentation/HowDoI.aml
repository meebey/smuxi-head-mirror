<?xml version="1.0" encoding="utf-8"?>
<topic id="008da98c-7349-46d6-b09e-af9f8906eb47" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <para>Here are extremely simple step-by-step instructions to some of your common questions.</para>
    </introduction>
    <procedure>
      <title>Get Started Using Twitterizer</title>
      <steps class="ordered">
        <step>
          <content>Add the Twitterizer2.dll file as a reference in your application.</content>
        </step>
        <step>
          <content>Include the Twitterizer namespace in your code file.
<code language="cs">
using Twitterizer;
</code>

<code language="vb">
Imports Twitterizer
</code>
</content>
        </step>
      </steps>
    </procedure>
    <procedure>
      <title>Gain Access To a User's Data (OAuth Authentication)</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Register your application with Twitter
            </para>
            <para>
              All applications must be registered with Twitter. You can register
              a new application by visiting the <externalLink>
                <linkText>Applications Using Twitter</linkText>
                <linkUri>http://twitter.com/apps</linkUri>
              </externalLink> page on twitter.com, or the <externalLink>
                <linkText>Twitter applications</linkText>
                <linkUri>http://dev.twitter.com/apps</linkUri>
              </externalLink> page on the Twitter developer portal.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Get a Request Token using
              <codeEntityReference>Overload:Twitterizer.OAuthUtility.GetRequestToken</codeEntityReference>.
            </para>
            <para>
              The request token is a temporary value that identifies the user
              through the authorization/authentication process.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Direct the user to login to Twitter
            </para>
            <para>
              Once there, the user will be prompted to login, if they aren't
              already. Then they will be given information about your application,
              and asked to grant or deny your application access.
            </para>
            <para>
              The authorization url can be quickly obtained using the
              <codeEntityReference>Overload:Twitterizer.OAuthUtility.BuildAuthorizationUri</codeEntityReference>
              method.
            </para>
            <para>
              For web applications, you should use <codeInline>Response.Redirect</codeInline>.
              Desktop and mobile applications will need to launch a browser and
              navigate to the authorization uri.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>Welcome the user back</para>
            <para>
              After granting your application access, the user will be directed
              back to your application either by redireciton to the callback url,
              for web sites, or by simple instructions for desktop/mobile
              applications.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>Get an Access token</para>
            <para>
              Use the
              <codeEntityReference>Overload:Twitterizer.OAuthUtility.GetAccessToken</codeEntityReference>
              method to obtain the access token and details about the authorized
              user.
            </para>
            <para>
              The access token is:
              <list class="bullet">
                <listItem>comprised of two values: the token and the token secret.</listItem>
                <listItem>specific to your application AND the authorized user.</listItem>
                <listItem>valid until the user revokes access.</listItem>
              </list>
            </para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>
  </developerHowToDocument>
</topic>